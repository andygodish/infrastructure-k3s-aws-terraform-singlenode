---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2021-12-12T21:46:56Z"
  labels:
    app: nginx
  name: nginx
  namespace: nginx
  resourceVersion: "3202152"
  uid: 235d2c12-f52d-41bd-a103-440ea473b8b8
spec:
  clusterIP: 10.43.139.81
  clusterIPs:
  - 10.43.139.81
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2021-12-07T06:37:20Z"
  generation: 1
  labels:
    app: nginx
  name: nginx
  namespace: nginx
  resourceVersion: "3154581"
  uid: 35fdcde1-fc2f-4f39-8607-2e4d6557dc41
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-12-07T06:37:20Z"
    lastUpdateTime: "2021-12-07T06:37:35Z"
    message: ReplicaSet "nginx-6799fc88d8" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2021-12-12T19:47:37Z"
    lastUpdateTime: "2021-12-12T19:47:37Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: nginx
  namespace: nginx
spec:
  tls: 
  - hosts: 
    - nginx.pilab.dev
    secretName: nginx-tls
  rules:
    - host: nginx.andygodish.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend: 
              service: 
                name: nginx
                port: 
                  number: 80
          - path: /bar
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80
          - path: /foo
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80
